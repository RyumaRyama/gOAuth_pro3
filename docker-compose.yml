version: '3'
services:
  mysql:
       # コンテナに名前をつけることもできる
    container_name: mysql
    # Dockerfileのあるディレクトリのパスを指定する
    build: ./mysql

    # mysqlのホスト名を決める
    hostname: mysql
    # 外部に公開するポートを指定する
    # これがないと外部からアクセスできない
    ports:
      - "3333:3333"
    # mysqlの設定
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: password
    # docker-compose run実行時に実行される
    # オプションは日本語文の字化けに対するおまじない
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --skip-character-set-client-handshake
    # パスをボリュームとしてマウント
    # :の左側がホストディレクトリ、:の右側がコンテナ上のディレクトリ
    volumes:
      - "db-data:/var/lib/mysql"
      # 初期設定を読み込む
      - "./mysql/my.conf:/etc/mysql/my.conf"
      # MySQL起動時にDBを作成する
      - "./mysql/init/:/docker-entrypoint-initdb.d"
  # ここからはGolangのアプリケーションに対する情報
    # mysqlのコンテナとリンク付けする
    # mysqlコンテナを起動してからsample_docker_composeを起動してくれるようになる

  web:
    links:
      - mysql
    build: ./web
    command: realize start --run --no-config
    volumes:
      - ./web:/go/src/app
    ports:
      - 1124:1124

  # トップレベルでvolumesを定義すると、各サービスからボリュームを参照できる
volumes:
  db-data:
    driver: local
